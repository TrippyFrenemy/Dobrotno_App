"""update creation date by default

Revision ID: 173f3d81278e
Revises: 13ff03e99ef1
Create Date: 2025-07-14 14:47:14.170107

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '173f3d81278e'
down_revision: Union[str, Sequence[str], None] = '13ff03e99ef1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('payouts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('returnings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shift_assignments', 'created_at',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('shifts', 'created_at',
               existing_type=sa.DATE(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('shifts', 'created_at',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('shift_assignments', 'created_at',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('returnings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('payouts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###
